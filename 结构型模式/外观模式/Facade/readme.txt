1 一个接口，封装调用不同的系统/对象的接口系列。
使客户程序员完成一个目标，无需理解用那些接口及其调用顺序。


4.10. 适用环境
在以下情况下可以使用外观模式：

1 当要为一个复杂子系统提供一个简单接口时可以使用外观模式。该接口可以满足大多数用户的需求，而且用户也可以越过外观类直接访问子系统。
2 客户程序与多个子系统之间存在很大的依赖性。引入外观类将子系统与客户以及其他子系统解耦，可以提高子系统的独立性和可移植性。
3 在层次化结构中，可以使用外观模式定义系统中每一层的入口，层与层之间不直接产生联系，而通过外观类建立联系，降低层之间的耦合度。

外观模式只能满足大部分客户程序的需求，如果需要高度定制。则越过外观模式，访问子系统。