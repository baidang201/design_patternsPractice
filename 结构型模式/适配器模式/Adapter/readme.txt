
Adapter 模式实现上比较简单，要说明的是在类模式 Adapter 中，
1 我们通过 private 继承Adaptee 获得实现继承的效果， 
2 而通过 public 继承 Target 获得接口继承的效果


接口继承和实现继承是面向对象领域的两个重要的概念，

接口继承指的是通过继承，子类获得了父类的接口，而实现继承指的是通过继承子类获得了父类的实现（并不统共接口）。

在 C++中的 public 继承既是接口继承又是实现继承，因为子类在继承了父类后既可以对外提供父类中的接口操作， 
又可以获得父类的接口实现。 当然我们可以通过一定的方式和技术模拟单独的接口继承和实现继承，

例如我们可以通过 private 继承获得实现继承的效果（ private 继承后，父类中的接口都变为 private，当然只能是实现继承了。），
通过纯抽象基类模拟接口继承的效果， 但是在 C++中 pure virtual function 也可以提供默认实现， 因此这是不纯正的接口继承，
但是在 Java 中我们可以 interface 来获得真正的接口继承了。

一个A去调用另一个B，他们有相似功能的接口，一个改变参数或调用方法去调用B。B是最终的实现者